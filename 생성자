생성자는 객체를 제대로 된 모양을 갖추게 만들어 주는 것
생성자 이름은 무조건 Class 이름과 같다
생성자 메소드는 반환타입이 없다.
 public class Sample {
    int no;
    String name;

    // 생성자 메소드
    Sample() {

    }
  }

객체가 생성되자마자 실행할 작업을 구현해 놓은 메소드가 생성자다.

생성자 메소드
- 객체 생성 직후에 실행되는 메소드
- 생성자 메소드에는 객체 생성 직후에 바로 수행할 작업이 정의된다.
- 객체의 초기화 작업이 정의된 메소드다.
- 형식
    생성자 메소드는 메소드명이 클래스 이름과 동일하다.
    생성자 메소드는 반환타입이 없다.
- 사용
    new 연산자로 객체 생성할 때 사용한다.
    Sample s1 = new Sample();
- 정의
소스파일에 생성자 메소드가 하나도 없어도 컴파일러가 실행파일을 생성할 때 자동으로 추가한다.
어떤 생성자를 하나라도 추가하면 컴파일러가 기본 생성자를 자동으로 추가해주지 않는다.
생성자 메소드를 개발자가 직접 정의하지 않아도 컴파일러가 자동으로 생성자 메소드를 만들어준다.
- 실행
생성자 메소드는 new 키워드와 같이 사용된다.
  * 객체가 생성된 후에 참조변수로 생성자 메소드를 다시 실행할 수 없다.
  * new 키워드로 객체를 생성할 때, 그때만 실행된다.

Sample s = new Sample();
* 생성자 메소드명이 클래스명과 동일하기 때문에
  new 키워드는 생성자 이름과 동일한 이름의 클래스로 객체를 생성한다.
* new 키워드 다음에 있는 생성자 메소드가 객체 생성 직후에 바로 
  수행될 초기화 작업이 정의된 메소드의 이름이 된다.
* 생성자 메소드를 통해서 JVM에게 두 가지 정보를 전달할 수 있다.
  - 객체 생성에 사용할 클래스 이름 <---- 생성자 메소드 이름이 클래스이름이다
  - 객체 생성 직후에 실행할 메소드
* new Sample()은 언제나 생성한 객체의 주소값을 반환한다.
  따라서, 생성자 메소드는 반환타입이 필요없다.

객체의 필드에 값을 넣는 작업을 초기화 작업이라고 한다.
객체마다 초기화 작업은 다 다르다.

매개변수가 하나도 없는 생성자를 기본 생성자이다.
